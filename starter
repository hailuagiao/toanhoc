<!DOCTYPE html>
<html lang='en'>
<head>
<meta charset='UTF-8'>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="author" content="Jonathan Hall">
<link rel="icon" type="image/png" href="/media/favicon192.png" sizes=192x192>
<link rel="stylesheet" href="/styles/main.css">
<script src='/scripts/questionBank.js'></script>
<script src='/scripts/differentiator.js'></script>
<script src='/scripts/utilities.js'></script> <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<meta name="description" content="A simple to use lesson starter for use on the interactive whiteboard. Answers can be checked individually or all at once.">
<title>Starter Generator - Maths Lesson Starter</title>
<script>
            var totalQuestions;
            var time;
            var memoryGame;
            var question = [];
            var sheetTimer;
            var timerStarted = false;
            var showingAnswers = false;
            var anchorLink = false;

            function createSheet() {
                var sheet = "";
                showingAnswers = false;
                answerButton.value = "Show Answers";
                clearTimeout(sheetTimer);
                sheetTimer = setInterval(timedCount, 1000);
                timerStarted = true;
                gridSize = totalQuestionsSelect.value;
                totalQuestions = gridSize * gridSize;
                memoryGame = memorySelect.value;
                time = timeSelect.value;
                createQuestions();
                for (var i = 0; i < gridSize * gridSize; i++) {
                    sheet += "<div style='width: " + ((100 - (0.6 * gridSize)) / gridSize) + "%' onclick='toggleAnswer(" + i + ")' class='questionBox border'>";
                    sheet += "<div onclick='refreshQuestion(" + i + ")' class='questionNumber'>" + (i + 1) + ".<span class='refreshQ'>&#8635;</span></div>";
                    sheet += "<div id='q" + i + "' class='question'>";
                    if (memoryGame > 0) {
                        sheet += "";
                    } else {
                        sheet += question[i].question;
                    }
                    sheet += "</div></div>";
                }
                starter.innerHTML = sheet;
                document.getElementById('controls').style.display = "none";
                document.getElementById('display').style.display = "block";
                timedCount();
                changeBG(bgSelect.value);
                MathJax.typesetPromise();
            }
            function stopGame() {
                clearTimeout(sheetTimer);
                timerStarted = false;
                time = -1;
                timeDisplay.innerHTML = "Time's up!";
                if (memoryGame > 0) {
                    answerButton.value = "Show Answers";
                    for (i = 0; i < totalQuestions; i++) {
                        document.getElementById('q' + i).innerHTML = "";
                        question[i].showingQuestion = false;
                    }
                }
            }
            function showMenu() {
                document.getElementById('controls').style.display = "block";
                document.getElementById('display').style.display = "none";
            }
            function timedCount() {
                if (!timerStarted) {
                    sheetTimer = setInterval(timedCount, 1000);
                    timerStarted = true;
                }
                var minutes = Math.floor(time / 60);
                var seconds = time % 60;
                if (seconds < 10) {
                    seconds = "0" + seconds;
                }
                timeDisplay.innerHTML = "Time Left: " + minutes + ":" + seconds;
                if (memoryGame > 0 && time % memoryGame == 0) {
                    for (var i = 0; i < totalQuestions; i++) {
                        document.getElementById('q' + i).innerHTML = "";
                        question[i].showingQuestion = false;
                    }
                    var maxRevealed = totalQuestions / 5;
                    for (i = 0; i < maxRevealed; i++) {
                        var x = getRandom(0, totalQuestions - 1)
                        document.getElementById('q' + x).innerHTML = question[x].question;
                        question[x].showingQuestion = true;
                    }
                }
                time--;
                if (time < 0) {
                    stopGame();
                }
            }

            function toggleAnswer(i) {
                if (question[i].showingQuestion) {
                    document.getElementById('q' + i).innerHTML = question[i].answer;
                    question[i].showingQuestion = false;
                } else {
                    document.getElementById('q' + i).innerHTML = question[i].question;
                    question[i].showingQuestion = true;
                }
                MathJax.typesetPromise();
            }

            function toggleAnswers() {
                if (question[0]) {
                    if (showingAnswers) {
                        for (var i = 0; i < totalQuestions; i++) {
                            document.getElementById('q' + i).innerHTML = question[i].question;
                            answerButton.value = "Show Answers";
                            question[i].showingQuestion = true;
                            showingAnswers = false;
                        }
                    } else {
                        for (i = 0; i < totalQuestions; i++) {
                            document.getElementById('q' + i).innerHTML = question[i].answer;
                            answerButton.value = "Show Questions";
                            question[i].showingQuestion = false;
                            showingAnswers = true;
                        }
                    }
                }
                MathJax.typesetPromise();
            }
            function refreshQuestion(i) {
                var minLevel = minLevelSelect.value / 10;
                var maxLevel = maxLevelSelect.value / 10;
                var level = minLevel;
                var step = (maxLevel - minLevel) / (totalQuestions - 1);
                for (var j = 0; j < i; j++) {
                    level += step;
                }
                if (level < minLevel) {
                    level = minLevel;
                }
                if (level > maxLevel) {
                    level = maxLevel;
                }
                getQuestion(topicSelect.value, level);
                question[i] = question[question.length - 1];
                question.pop();
                var attempts = 0;
                do {
                    var repeat = false;
                    for (var j = 0; j < totalQuestions; j++) {
                        if (i !== j && question[i].answer === question[j].answer) {
                            repeat = true;
                        }
                    }
                    if (repeat) {
                        getQuestion(topicSelect.value, level);
                        question[i] = question[question.length - 1];
                        question.pop();
                        if (attempts % 30 === 0) {
                            level += 0.1;
                        }
                    }
                } while (repeat === true && attempts < 100);
                question[i].showingQuestion = true;
                toggleAnswer(i);
                MathJax.typesetPromise();
            }
            function createQuestions() {
                var minLevel = minLevelSelect.value / 10;
                var maxLevel = maxLevelSelect.value / 10;
                var level = minLevel;
                var step = (maxLevel - minLevel) / (totalQuestions - 1);
                question = new Array();
                for (var i = 0; i < totalQuestions; i++) {
                    if (level < minLevel) {
                        level = minLevel;
                    }
                    if (level > maxLevel) {
                        level = maxLevel;
                    }
                    getQuestion(topicSelect.value, level);
                    var attempts = 0;
                    do {
                        var repeat = false;
                        for (var j = 0; j < i; j++) {
                            if (question[i].answer === question[j].answer) {
                                repeat = true;
                            }
                        }
                        if (repeat) {
                            getQuestion(topicSelect.value, level);
                            question[i] = question[question.length - 1];
                            question.pop();
                            attempts++;
                            if (attempts % 30 === 0) {
                                level += 0.1;
                            }
                        }
                    } while (repeat === true && attempts < 100);
                    question[i].showingQuestion = true;
                    level += step;
                }
                MathJax.typesetPromise();
            }
            function goFull() {
                if (controls.style.display !== "none" || display.style.display !== "none") {
                    controls.style.display = "none";
                    display.style.display = "none";
                    content.style.height = 0.98 * window.innerHeight + "px";
                    footer.style.display = "none";
                } else {
                    controls.style.display = "none";
                    display.style.display = "block";
                    content.style.height = "100%";
                    footer.style.display = "block";
                }
            }
            function filter(keyword) {
                for (var i = 0; i < topicSelect.length; i++) {
                    var txt = topicSelect.options[i].text;
                    var include = txt.toLowerCase().search(keyword.toLowerCase());
                    if (include > -1) {
                        topicSelect.options[i].style.display = 'list-item';
                        topicSelect.options[i].disabled = false;
                    } else {
                        topicSelect.options[i].style.display = 'none';
                        topicSelect.options[i].disabled = true;
                    }
                }
                for (var i = 1; i < topicSelect.length; i++) {
                    var random = true;
                    if (topicSelect.options[i].disabled !== true) {
                        topicSelect.selectedIndex = i;
                        random = false;
                        i = topicSelect.length;
                    }
                }
                if (random) {
                    topicSelect.selectedIndex = 0;
                }
            }
        </script>
<style>
            div.questionBox {
                height: 9em;
                width: 19.4%;
                float: left;
            }
            div.questionBox:hover {
                color: #515;
                cursor: pointer;
            }
            div.questionNumber {
                font-weight: bold;
                text-align: left;
                width: 2em;
            }
            div.question {
                font-size: 2em;
                overflow-wrap: break-word;
            }
            div.smaller {
                font-size: 0.65em;
            }
            #timeDisplay {
                font-size: 2em;
            }
            #display {
                display: none;
            }
            @media print {
                @page {size: landscape}
            }
            #search {
                width: 8em;
                border-radius: 0;
            }
            div.ad {
                background: #fff;
                min-height: 50vh;
                overflow: auto;
                padding: 2em;
            }
            div.adBox {
                padding: 2%;
            }
            @media (max-width: 800px){ 
                div.adBox {
                    width: 96%;
                }
            }
        </style>
<script async src='/cdn-cgi/challenge-platform/h/b/scripts/invisible.js'></script></head>
<body>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-44508399-1', 'auto');
  ga('send', 'pageview');

</script>
<input title='Toggle Full Screen.' onclick='goFull()' class='fullScreen' type='button' value='&#10019;'>
<section id="controls" class="controls border">
<h1>Starter Generator</h1>
<div class="middleMenu">
<div>
<label for="topicSelect">Topic:</label><select id="topicSelect"><option selected value = 0>Random</option><option value=1>1. Arithmetic: Addition</option><option value=4>2. Arithmetic: Division</option><option value=23>3. Arithmetic: Four operations</option><option value=3>4. Arithmetic: Multiplication</option><option value=2>5. Arithmetic: Subtraction</option><option value=103>6. Circles: Stating the equation</option><option value=14>7. Collecting like terms</option><option value=74>8. Converting units: Time</option><option value=60>9. Differences</option><option value=6>10. Doubling</option><option value=29>11. Equations: 1 step</option><option value=38>12. Equations: 2 steps</option><option value=46>13. Equations: Brackets 1 side</option><option value=48>14. Equations: Brackets 2 sides</option><option value=44>15. Equations: Mixed</option><option value=43>16. Equations: Unknowns on both sides</option><option value=66>17. Expanding and simplifying single brackets</option><option value=87>18. Expanding double brackets</option><option value=65>19. Expanding single brackets</option><option value=15>20. Factors</option><option value=79>21. FDP: Converting from decimals</option><option value=80>22. FDP: Converting from fractions</option><option value=81>23. FDP: Converting from percentages</option><option value=13>24. FDP: Converting mixed</option><option value=67>25. FDP: Of one amount to another</option><option value=31>26. Fractions: Addition and subtraction</option><option value=42>27. Fractions: Converting improper and mixed</option><option value=54>28. Fractions: Four operations</option><option value=59>29. Fractions: Increase and decrease</option><option value=32>30. Fractions: Multiplication and division</option><option value=7>31. Fractions: Of amounts</option><option value=77>32. Fractions: Of one amount to another</option><option value=20>33. Fractions: Simplifying</option><option value=82>34. Graphs: Gradient from two points</option><option value=83>35. Graphs: Midpoint from two points</option><option value=5>36. Halving</option><option value=17>37. Highest common factors</option><option value=89>38. Indices: Division law</option><option value=91>39. Indices: Mixed Laws</option><option value=88>40. Indices: Multiplication law</option><option value=90>41. Indices: Power law</option><option value=68>42. Inequalities: Solving 1 step</option><option value=69>43. Inequalities: Solving 2 step</option><option value=70>44. Inequalities: Solving unknowns on both sides</option><option value=18>45. Lowest common multiples</option><option value=45>46. Metric units: Converting lengths</option><option value=57>47. Metric units: Converting mixed units</option><option value=56>48. Metric units: Converting volume</option><option value=55>49. Metric units: Converting weights</option><option value=24>50. Money: Adding coins</option><option value=25>51. Money: Counting coins</option><option value=16>52. Multiples</option><option value=64>53. Multiplying terms</option><option value=98>54. Negative numbers: Addition</option><option value=101>55. Negative numbers: Division</option><option value=10>56. Negative numbers: Mixed operations</option><option value=100>57. Negative numbers: Multiplication</option><option value=99>58. Negative numbers: Subtraction</option><option value=61>59. Negative numbers: Temperatures</option><option value=30>60. Number bonds</option><option value=104>61. Order of Operations: &#215 and &#247</option><option value=105>62. Order of Operations: + and &minus;</option><option value=28>63. Ordering numbers</option><option value=96>64. Percentages: Change</option><option value=49>65. Percentages: Increase and decrease</option><option value=95>66. Percentages: Multipliers</option><option value=8>67. Percentages: Of amounts</option><option value=78>68. Percentages: Of one amount to another</option><option value=97>69. Percentages: Repeated change</option><option value=50>70. Percentages: Reverse</option><option value=62>71. Polygons: Sides</option><option value=27>72. Powers and roots</option><option value=11>73. Powers of ten</option><option value=63>74. Probability: Expected frequency</option><option value=58>75. Probability: Simple events</option><option value=53>76. Proportion: Unitary method</option><option value=84>77. Quadratics: Completing the square</option><option value=86>78. Quadratics: Factorising</option><option value=85>79. Quadratics: Find equation given turning point</option><option value=93>80. Ratio: Combining</option><option value=94>81. Ratio: Difference</option><option value=92>82. Ratio: Mixed</option><option value=52>83. Ratio: Reverse</option><option value=12>84. Ratio: Sharing</option><option value=19>85. Ratio: Simplifying</option><option value=9>86. Rounding</option><option value=71>87. Sequences: Fibonacci</option><option value=47>88. Sequences: Finding the next term</option><option value=22>89. Sequences: Generating terms</option><option value=72>90. Sequences: Geometric</option><option value=21>91. Sequences: Linear nth term</option><option value=73>92. Sequences: Quadratic nth term</option><option value=26>93. Speed, distance, time</option><option value=40>94. Standard Form: Addition</option><option value=102>95. Standard Form: Converting from</option><option value=41>96. Standard Form: Converting to</option><option value=76>97. Standard Form: Division</option><option value=39>98. Standard Form: Multiplication</option><option value=75>99. Standard Form: Subtraction</option><option value=37>100. Statistics: Averages and range</option><option value=33>101. Statistics: Mean</option><option value=34>102. Statistics: Median</option><option value=36>103. Statistics: Mode</option><option value=35>104. Statistics: Range</option><option value=51>105. Substitution</option></select> </div>
<div>
<label for="search">Search:</label>
<input type="search" placeholder="Keyword" id="search" onclick="filter(this.value)" onkeyup="filter(this.value)">
</div>
<div>
<label for='totalQuestionsSelect'>Grid Size:</label><select onchange='setUp()' id='totalQuestionsSelect'><option value=2>2 &#215; 2</option><option value=3>3 &#215; 3</option><option selected value=4>4 &#215; 4</option><option value=5>5 &#215; 5</option><option value=6>6 &#215; 6</option></select><input type='button' value='Create Starter' onclick='createSheet()'> </div>
</div>
<div class="leftMenu">
<label for='timeSelect'>Time:</label><select id='timeSelect'><option value=60>1 minute</option><option value=120>2 minutes</option><option value=180>3 minutes</option><option value=240>4 minutes</option><option selected='selected' value=300>5 minutes</option><option value=360>6 minutes</option><option value=420>7 minutes</option><option value=480>8 minutes</option><option value=540>9 minutes</option><option value=600>10 minutes</option><option value=660>11 minutes</option><option value=720>12 minutes</option><option value=780>13 minutes</option><option value=840>14 minutes</option><option value=900>15 minutes</option><option value=960>16 minutes</option><option value=1020>17 minutes</option><option value=1080>18 minutes</option><option value=1140>19 minutes</option><option value=1200>20 minutes</option><option value=1260>21 minutes</option><option value=1320>22 minutes</option><option value=1380>23 minutes</option><option value=1440>24 minutes</option><option value=1500>25 minutes</option><option value=1560>26 minutes</option><option value=1620>27 minutes</option><option value=1680>28 minutes</option><option value=1740>29 minutes</option><option value=1800>30 minutes</option></select><br><label for='memorySelect'>Time Delay:</label><select id='memorySelect'><option value=0>None</option><option value=1>1 second</option><option value=2>2 seconds</option><option value=3>3 seconds</option><option value=4>4 seconds</option><option value=5>5 seconds</option><option value=6>6 seconds</option><option value=7>7 seconds</option><option value=8>8 seconds</option><option value=9>9 seconds</option><option value=10>10 seconds</option><option value=11>11 seconds</option><option value=12>12 seconds</option><option value=13>13 seconds</option><option value=14>14 seconds</option><option value=15>15 seconds</option><option value=16>16 seconds</option><option value=17>17 seconds</option><option value=18>18 seconds</option><option value=19>19 seconds</option><option value=20>20 seconds</option><option value=21>21 seconds</option><option value=22>22 seconds</option><option value=23>23 seconds</option><option value=24>24 seconds</option><option value=25>25 seconds</option><option value=26>26 seconds</option><option value=27>27 seconds</option><option value=28>28 seconds</option><option value=29>29 seconds</option><option value=30>30 seconds</option></select><br><label for='bgSelect'>Background:</label><input style='max-width: 4em' oninput='changeBG(this.value)' onchange='changeBG(this.value)' value='#ffffff' type='color' id='bgSelect'> </div>
<div class="rightMenu">
<label for='minLevelSelect'>Min. Difficulty:</label><select id='minLevelSelect'><option selected value=0>0</option><option value=1>1</option><option value=2>2</option><option value=3>3</option><option value=4>4</option><option value=5>5</option><option value=6>6</option><option value=7>7</option><option value=8>8</option><option value=9>9</option><option value=10>10</option></select><br><label for='maxLevelSelect'>Max. Difficulty</label><select id='maxLevelSelect'><option value=0>0</option><option value=1>1</option><option value=2>2</option><option value=3>3</option><option value=4>4</option><option selected value=5>5</option><option value=6>6</option><option value=7>7</option><option value=8>8</option><option value=9>9</option><option value=10>10</option></select> </div>
</section>
<section id="display" class="controls border">
<div id='timeDisplay'></div>
<div>
<input type='button' onclick='time -= 59;
                        timedCount()' value='-1 min'>
<input type='button' value='New Starter' onclick='createSheet()'>
<input type="button" value="Main Menu" onclick="showMenu()">
<input type="button" value="Print Starter" onclick="window.print()">
<input id="answerButton" type="button" value="Show Answers" onclick="toggleAnswers()">
<input type='button' onclick='time += 61; timedCount()' value='+1 min'>
</div>
</section>
<section>
<div id="content">
<div id="starter" class="noSelect">
<div class='ad'>
<div class="adBox">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-4338550553309231" data-ad-slot="8324391446" data-ad-format="auto"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
<h2>Customise using the options above then click 'Create Starter' to generate a random set of questions on your chosen topic.</h2>
</div>
</div>
</div>
</section>
<footer id="footer">
<div>
<small>
<a href="/">Home</a> |
<a href="/doNowMenu">Do Nows</a> |
<a href="/gcseMenu">GCSE Resources</a> |
<a href="/manipulativeMenu">Manipulatives</a> |
<a href="/printableMenu">Printables</a> |
<a href="/generatorMenu">Question Generators</a> |
<a href="/starterMenu">Starters</a> |
<a href="/toolMenu">Tools</a> |
<a href="/privacy">Privacy</a> |
<a href="/about">Contact</a> |
Copyright &copy;
</small>
</div>
</footer> <script type="text/javascript">(function(){window['__CF$cv$params']={r:'6828d879cddde855',m:'c7222af590e3e43c7e8185b7251cdc5f433819c6-1629601171-1800-AUcnLqbUsTrUDImnSVZsAUbhLERd+Rg1EEmg/Baz9aeJqWe8Asasp5w0uQ0GqOmUA0fB6NTl16uS0L64cjr4qjjuAUIfZRQDbj9jBbcmdtidHkv131DZkN2kUGE4qa6IbQ==',s:[0x3beba5471a,0xdf7be49cfb],u:'/cdn-cgi/challenge-platform/h/b'}})();</script></body>
</html>