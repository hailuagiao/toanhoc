<!DOCTYPE html>
<html lang='en'>
<head>
<meta charset='UTF-8'>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="author" content="Jonathan Hall">
<link rel="stylesheet" href="/styles/main.css">
<link rel="icon" type="image/png" href="/media/favicon192.png" sizes=192x192>
<script src='/scripts/questionBank.js'></script>
<script src='/scripts/differentiator.js'></script>
<script src='/scripts/utilities.js'></script>
<meta name="description" content="Follow me/loop cards to be printed and used in the classroom.">
<title>Loop cards</title>
<script>
            var totalQuestions;
            var question = new Array();
            var fullLoop = false;
            function createSheet() {
                var sheet = "";
                totalQuestions = totalQuestionsSelect.value - 1;
                if (fullLoopSelect.checked) {
                    fullLoop = true;
                    totalQuestions++;
                } else {
                    fullLoop = false;
                }
                var size = sizeSelect.value;
                var cardWidth = (100 - (0.6 * size)) / size;
                var fontSize = 5 / size;
                var cardHeight = Math.min(fontSize * 8, 8);
                var breakPoint = size * size;
                createQuestions();
                if (fullLoop) {
                    for (var i = 0; i < totalQuestions; i++) {
                        if (i > 0 && (i + 1) % breakPoint === 0) {
                            sheet += "<div style='page-break-after:always;'>";
                        }
                        sheet += "<div style='font-size: " + fontSize + "em; width: " + cardWidth + "%; height: " + cardHeight + "em' class='questionBox border'>";
                        sheet += "<div onclick='refreshQuestion(" + i + ")' class='questionNumber'>&#8635;</div>";
                        sheet += "<div id='a" + i + "' class='answer'>";
                        if (i > 0) {
                            sheet += "A: " + question[i - 1].answer;
                        } else {
                            sheet += "A: " + question[totalQuestions - 1].answer;
                        }
                        sheet += "</div>";

                        sheet += "<div id='q" + i + "' class='question'>";
                        if (i < totalQuestions) {
                            sheet += "Q: " + question[i].question;
                        } else {
                            sheet += "Q: " + question[0].question;
                        }
                        sheet += "</div></div></div>";
                    }
                } else {
                    for (var i = 0; i <= totalQuestions; i++) {
                        if (i > 0 && (i + 1) % breakPoint === 0) {
                            sheet += "<div style='page-break-after:always;'>";
                        }
                        sheet += "<div  style='font-size: " + fontSize + "em; width: " + cardWidth + "%; height: " + cardHeight + "em' class='questionBox border'>";
                        if (i < totalQuestions) {
                            sheet += "<div onclick='refreshQuestion(" + i + ")' class='questionNumber'>&#8635;</div>";
                        } else {
                            sheet += "<div class='questionNumber'></div>";
                        }
                        sheet += "<div id='a" + i + "' class='answer'>";
                        if (i > 0) {
                            sheet += "A: " + question[i - 1].answer;
                        } else {
                            sheet += "START";
                        }
                        sheet += "</div>";
                        sheet += "<div id='q" + i + "' class='question'>";
                        if (i < totalQuestions) {
                            sheet += "Q: " + question[i].question;
                        } else {
                            sheet += "FINISH";
                        }
                        sheet += "</div></div></div>";
                    }
                }
                starter.innerHTML = sheet;
                updateAnswers();
                changeBG(bgSelect.value);
                MathJax.typesetPromise();
            }
            function updateAnswers() {
                var data = "<div><h3>Answer loop</h3><p>";
                if (!fullLoop) {
                    data += "START &rarr; ";
                }
                for (var i = 0; i < totalQuestions - 1; i++) {
                    data += question[i].answer + " &rarr; ";
                }
                data += question[i].answer;
                if (!fullLoop) {
                    data += " &rarr; FINISH";
                }
                data += "</p></div>";
                answers.innerHTML = data;
            }
            function refreshQuestion(i) {
                var minLevel = minLevelSelect.value / 10;
                var maxLevel = maxLevelSelect.value / 10;
                var level = minLevel;
                var step = (maxLevel - minLevel) / (totalQuestions - 1);
                for (var j = 0; j < i; j++) {
                    level += step;
                }
                if (level < minLevel) {
                    level = minLevel;
                }
                if (level > maxLevel) {
                    level = maxLevel;
                }
                getQuestion(topicSelect.value, level);
                question[i] = question[question.length - 1];
                question.pop();

                var attempts = 0;
                do {
                    var repeat = false;
                    for (var j = 0; j < totalQuestions; j++) {
                        if (i !== j && question[i].answer === question[j].answer) {
                            repeat = true;
                        }
                    }
                    if (repeat) {
                        getQuestion(topicSelect.value, level);
                        question[i] = question[question.length - 1];
                        question.pop();
                        attempts++;
                        if (attempts % 30 === 0) {
                            level += 0.1;
                        }
                    }
                } while (repeat === true && attempts < 100);
                document.getElementById('q' + i).innerHTML = "Q: " + question[i].question;
                if (i === totalQuestions - 1 && fullLoop) {
                    document.getElementById('a' + 0).innerHTML = "A: " + question[i].answer;
                } else {
                    document.getElementById('a' + (i + 1)).innerHTML = "A: " + question[i].answer;
                }
                updateAnswers();
                MathJax.typesetPromise();
            }
            function createQuestions() {
                var minLevel = minLevelSelect.value / 10;
                var maxLevel = maxLevelSelect.value / 10;
                var level = minLevel;
                var step = (maxLevel - minLevel) / (totalQuestions - 1);
                question = new Array();
                for (var i = 0; i < totalQuestions; i++) {
                    if (level < minLevel) {
                        level = minLevel;
                    }
                    if (level > maxLevel) {
                        level = maxLevel;
                    }
                    getQuestion(topicSelect.value, level);
                    var attempts = 0;
                    do {
                        var repeat = false;
                        for (var j = 0; j < i; j++) {
                            if (question[i].answer === question[j].answer) {
                                repeat = true;
                            }
                        }
                        if (repeat) {
                            getQuestion(topicSelect.value, level);
                            question[i] = question[question.length - 1];
                            question.pop();
                            attempts++;
                            if (attempts % 30 === 0) {
                                level += 0.1;
                            }
                        }
                    } while (repeat === true && attempts < 100);
                    level += step;
                }
            }
        </script>
<style>
            div.questionBox {
                width: 19.4%;
                float: left;
            }
            div.questionNumber {
                font-weight: bold;
                text-align: left;
                font-size: 14px;
            }
            div.question {
                margin-top: 0.5em;
                overflow-wrap: break-word;
            }
            div.answer {
                padding-bottom: 0.5em;
                margin-bottom: 0.5em;
                border-bottom: 2px solid #000;
            }
            section.answers {
                background-color: #fff;
            }
            div.smaller {
                display: inline;
            }
            @media print {
                @page {size: landscape}
                div.questionNumber {
                    display: none !important;
                }
                .border {
                    border: 1px solid black;
                }
            }
        </style>
<script async src='/cdn-cgi/bm/cv/669835187/api.js'></script></head>
<body onload="createSheet()">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-44508399-1', 'auto');
  ga('send', 'pageview');

</script>
<section id="controls" class="controls border">
<div class="middleMenu">
<h1>Loop Cards</h1>
<label for="topicSelect">Topic:</label><select id="topicSelect"><option selected value = 0>Random</option><option value=1>1. Arithmetic: Addition</option><option value=4>2. Arithmetic: Division</option><option value=23>3. Arithmetic: Four operations</option><option value=3>4. Arithmetic: Multiplication</option><option value=2>5. Arithmetic: Subtraction</option><option value=103>6. Circles: Stating the equation</option><option value=14>7. Collecting like terms</option><option value=74>8. Converting units: Time</option><option value=60>9. Differences</option><option value=6>10. Doubling</option><option value=29>11. Equations: 1 step</option><option value=38>12. Equations: 2 steps</option><option value=46>13. Equations: Brackets 1 side</option><option value=48>14. Equations: Brackets 2 sides</option><option value=44>15. Equations: Mixed</option><option value=43>16. Equations: Unknowns on both sides</option><option value=66>17. Expanding and simplifying single brackets</option><option value=87>18. Expanding double brackets</option><option value=65>19. Expanding single brackets</option><option value=15>20. Factors</option><option value=79>21. FDP: Converting from decimals</option><option value=80>22. FDP: Converting from fractions</option><option value=81>23. FDP: Converting from percentages</option><option value=13>24. FDP: Converting mixed</option><option value=67>25. FDP: Of one amount to another</option><option value=31>26. Fractions: Addition and subtraction</option><option value=42>27. Fractions: Converting improper and mixed</option><option value=54>28. Fractions: Four operations</option><option value=59>29. Fractions: Increase and decrease</option><option value=32>30. Fractions: Multiplication and division</option><option value=7>31. Fractions: Of amounts</option><option value=77>32. Fractions: Of one amount to another</option><option value=20>33. Fractions: Simplifying</option><option value=82>34. Graphs: Gradient from two points</option><option value=83>35. Graphs: Midpoint from two points</option><option value=5>36. Halving</option><option value=17>37. Highest common factors</option><option value=89>38. Indices: Division law</option><option value=91>39. Indices: Mixed Laws</option><option value=88>40. Indices: Multiplication law</option><option value=90>41. Indices: Power law</option><option value=68>42. Inequalities: Solving 1 step</option><option value=69>43. Inequalities: Solving 2 step</option><option value=70>44. Inequalities: Solving unknowns on both sides</option><option value=18>45. Lowest common multiples</option><option value=45>46. Metric units: Converting lengths</option><option value=57>47. Metric units: Converting mixed units</option><option value=56>48. Metric units: Converting volume</option><option value=55>49. Metric units: Converting weights</option><option value=24>50. Money: Adding coins</option><option value=25>51. Money: Counting coins</option><option value=16>52. Multiples</option><option value=64>53. Multiplying terms</option><option value=98>54. Negative numbers: Addition</option><option value=101>55. Negative numbers: Division</option><option value=10>56. Negative numbers: Mixed operations</option><option value=100>57. Negative numbers: Multiplication</option><option value=99>58. Negative numbers: Subtraction</option><option value=61>59. Negative numbers: Temperatures</option><option value=30>60. Number bonds</option><option value=104>61. Order of Operations: &#215 and &#247</option><option value=105>62. Order of Operations: + and &minus;</option><option value=28>63. Ordering numbers</option><option value=96>64. Percentages: Change</option><option value=49>65. Percentages: Increase and decrease</option><option value=95>66. Percentages: Multipliers</option><option value=8>67. Percentages: Of amounts</option><option value=78>68. Percentages: Of one amount to another</option><option value=97>69. Percentages: Repeated change</option><option value=50>70. Percentages: Reverse</option><option value=62>71. Polygons: Sides</option><option value=27>72. Powers and roots</option><option value=11>73. Powers of ten</option><option value=63>74. Probability: Expected frequency</option><option value=58>75. Probability: Simple events</option><option value=53>76. Proportion: Unitary method</option><option value=84>77. Quadratics: Completing the square</option><option value=86>78. Quadratics: Factorising</option><option value=85>79. Quadratics: Find equation given turning point</option><option value=93>80. Ratio: Combining</option><option value=94>81. Ratio: Difference</option><option value=92>82. Ratio: Mixed</option><option value=52>83. Ratio: Reverse</option><option value=12>84. Ratio: Sharing</option><option value=19>85. Ratio: Simplifying</option><option value=9>86. Rounding</option><option value=71>87. Sequences: Fibonacci</option><option value=47>88. Sequences: Finding the next term</option><option value=22>89. Sequences: Generating terms</option><option value=72>90. Sequences: Geometric</option><option value=21>91. Sequences: Linear nth term</option><option value=73>92. Sequences: Quadratic nth term</option><option value=26>93. Speed, distance, time</option><option value=40>94. Standard Form: Addition</option><option value=102>95. Standard Form: Converting from</option><option value=41>96. Standard Form: Converting to</option><option value=76>97. Standard Form: Division</option><option value=39>98. Standard Form: Multiplication</option><option value=75>99. Standard Form: Subtraction</option><option value=37>100. Statistics: Averages and range</option><option value=33>101. Statistics: Mean</option><option value=34>102. Statistics: Median</option><option value=36>103. Statistics: Mode</option><option value=35>104. Statistics: Range</option><option value=51>105. Substitution</option></select></select> <br>
<input type='button' value='New Cards' onclick='createSheet()'>
<input type="button" value="Print Cards" onclick="window.print()">
</div>
<div class="leftMenu">
 <br><label for='totalQuestionsSelect'>Cards:</label><select onchange='createSheet()' id='totalQuestionsSelect'><option value=5>5</option><option value=6>6</option><option value=7>7</option><option value=8>8</option><option value=9>9</option><option value=10>10</option><option value=11>11</option><option selected value=12>12</option><option value=13>13</option><option value=14>14</option><option value=15>15</option><option value=16>16</option><option value=17>17</option><option value=18>18</option><option value=19>19</option><option value=20>20</option><option value=21>21</option><option value=22>22</option><option value=23>23</option><option value=24>24</option><option value=25>25</option><option value=26>26</option><option value=27>27</option><option value=28>28</option><option value=29>29</option><option value=30>30</option><option value=31>31</option><option value=32>32</option><option value=33>33</option><option value=34>34</option><option value=35>35</option><option value=36>36</option><option value=37>37</option><option value=38>38</option><option value=39>39</option><option value=40>40</option><option value=41>41</option><option value=42>42</option><option value=43>43</option><option value=44>44</option><option value=45>45</option><option value=46>46</option><option value=47>47</option><option value=48>48</option><option value=49>49</option><option value=50>50</option></select> <br>
<label for="sizeSelect">Print Size:</label>
<select onchange='createSheet()' id='sizeSelect'>
<option value='1'>1 x 1</option>
<option value='2'>2 x 2</option>
<option value='3'>3 x 3</option>
<option selected value='4'>4 x 4</option>
<option value='5'>5 x 5</option>
</select>
</div>
<div class="rightMenu">
<label for='minLevelSelect'>Min. Difficulty:</label><select id='minLevelSelect'><option selected value=0>0</option><option value=1>1</option><option value=2>2</option><option value=3>3</option><option value=4>4</option><option value=5>5</option><option value=6>6</option><option value=7>7</option><option value=8>8</option><option value=9>9</option><option value=10>10</option></select><br><label for='maxLevelSelect'>Max. Difficulty</label><select id='maxLevelSelect'><option value=0>0</option><option value=1>1</option><option value=2>2</option><option value=3>3</option><option value=4>4</option><option selected value=5>5</option><option value=6>6</option><option value=7>7</option><option value=8>8</option><option value=9>9</option><option value=10>10</option></select> <br>
<label for="fullLoopSelect">Continuous Loop?</label>
<input onchange='createSheet()' type="checkbox" id="fullLoopSelect">
</div>
</section>
<section id="starter"></section>
<section class="answers border" id="answers"></section>
<footer id="footer">
<div>
<small>
<a href="/">Home</a> |
<a href="/doNowMenu">Do Nows</a> |
<a href="/gcseMenu">GCSE Resources</a> |
<a href="/manipulativeMenu">Manipulatives</a> |
<a href="/printableMenu">Printables</a> |
<a href="/generatorMenu">Question Generators</a> |
<a href="/starterMenu">Starters</a> |
<a href="/toolMenu">Tools</a> |
<a href="/privacy">Privacy</a> |
<a href="/about">Contact</a> |
Copyright &copy;
</small>
</div>
</footer> <script type="text/javascript">(function(){window['__CF$cv$params']={r:'6828d771ce3be855',m:'855903b35ac82cdd3984ff8c84ffe6d104d619e3-1629601129-1800-AYHnaWqeyyDzAfanYXTukAJvc/GxfF7vt1p4oWtIl14DAO1ajROyphXCjcDyv3DqqP6/6QhyuuN5/z6i1HJw8XEBoQ1VQ5XKOzhojyy06m7xsncd4YXc1CjpifozLzDX3o04ehKnvu2rsgH6KMMrCAw=',s:[0x0c729efc78,0xdf7be49cfb],}})();</script></body>
</html>